import { ref } from 'vue'

export const routes = ref([
  {
    id: 1,
    name: 'Bangkok Metropolitan Line',
    description: 'Railway crossings within Bangkok metropolitan area',
    status: 'active',
    startPoint: 'Chatuchak Crossing',
    endPoint: 'Hua Lamphong Crossing',
    crossings: Array.from({ length: 10 }, (_, i) => ({
      id: i + 1,
      name: [
        'Chatuchak Crossing',
        'Phahonyothin Crossing',
        'Lat Phrao Crossing',
        'Makkasan Crossing',
        'Asok Crossing',
        'Phetchaburi Crossing',
        'Rama 4 Crossing',
        'Klong Toei Crossing',
        'Rama 3 Crossing',
        'Hua Lamphong Crossing',
      ][i],
      type: i % 2 === 0 ? 'Level Crossing' : 'Railway Crossing',
      coordinates: `${13.7565 + i * 0.02}, ${100.5016 + i * 0.02}`,
      cameras: [
        {
          id: i * 2 + 1,
          name: `${['North', 'East', 'Primary'][i % 3]} Camera ${String.fromCharCode(65 + i)}`,
          streamUrl: `rtsp://camera${i + 1}.stream.com/primary`,
          aiUrl: `http://ai-service.com/analyze/primary-${i + 1}`,
          status: i % 7 === 0 ? 'offline' : 'active',
          type: i % 2 === 0 ? 'PTZ' : 'Fixed',
          location: `${['North', 'East', 'Primary'][i % 3]} View`,
          installationDate: '2024-01-15',
          latitude: 13.7565 + i * 0.02 + 0.0001,
          longitude: 100.5016 + i * 0.02,
        },
        {
          id: i * 2 + 2,
          name: `${['South', 'West', 'Secondary'][i % 3]} Camera ${String.fromCharCode(65 + i)}`,
          streamUrl: `rtsp://camera${i + 1}.stream.com/secondary`,
          aiUrl: `http://ai-service.com/analyze/secondary-${i + 1}`,
          status: 'active',
          type: i % 2 === 0 ? 'Fixed' : 'PTZ',
          location: `${['South', 'West', 'Secondary'][i % 3]} View`,
          installationDate: '2024-01-15',
          latitude: 13.7565 + i * 0.02 - 0.0001,
          longitude: 100.5016 + i * 0.02,
        },
      ],
    })),
  },
  {
    id: 2,
    name: 'Northern Line',
    description: 'Bangkok to Chiang Mai Main Route',
    status: 'active',
    startPoint: 'Don Mueang Crossing',
    endPoint: 'Chiang Mai Station Crossing',
    crossings: Array.from({ length: 10 }, (_, i) => ({
      id: i + 1,
      name: [
        'Don Mueang Crossing',
        'Rangsit Crossing',
        'Ayutthaya Crossing',
        'Lopburi Crossing',
        'Nakhon Sawan Crossing',
        'Phitsanulok Crossing',
        'Uttaradit Crossing',
        'Lampang Crossing',
        'Lamphun Crossing',
        'Chiang Mai Station Crossing',
      ][i],
      type: i % 2 === 0 ? 'Level Crossing' : 'Railway Crossing',
      coordinates: `${13.7565 + i * 0.5}, ${100.5016 + i * 0.2}`,
      cameras: [
        {
          id: i * 2 + 1,
          name: `North Camera ${String.fromCharCode(65 + i)}`,
          streamUrl: `rtsp://camera${i + 1}.stream.com/north`,
          aiUrl: `http://ai-service.com/analyze/north-${i + 1}`,
          status: 'active',
          type: 'PTZ',
          location: 'North View',
          installationDate: '2024-01-15',
          latitude: 13.7565 + i * 0.5 + 0.0001,
          longitude: 100.5016 + i * 0.2,
        },
        {
          id: i * 2 + 2,
          name: `South Camera ${String.fromCharCode(65 + i)}`,
          streamUrl: `rtsp://camera${i + 1}.stream.com/south`,
          aiUrl: `http://ai-service.com/analyze/south-${i + 1}`,
          status: 'active',
          type: 'Fixed',
          location: 'South View',
          installationDate: '2024-01-15',
          latitude: 13.7565 + i * 0.5 - 0.0001,
          longitude: 100.5016 + i * 0.2,
        },
      ],
    })),
  },
  {
    id: 3,
    name: 'Northeastern Line',
    description: 'Bangkok to Nong Khai Route',
    status: 'active',
    startPoint: 'Lak Si Crossing',
    endPoint: 'Nong Khai Station Crossing',
    crossings: Array.from({ length: 10 }, (_, i) => ({
      id: i + 11,
      name: [
        'Lak Si Crossing',
        'Bang Khen Crossing',
        'Saraburi Crossing',
        'Nakhon Ratchasima Crossing',
        'Bua Yai Crossing',
        'Khon Kaen Crossing',
        'Udon Thani Crossing',
        'Nong Khai City Crossing',
        'Friendship Bridge Crossing',
        'Nong Khai Station Crossing',
      ][i],
      type: i % 2 === 0 ? 'Level Crossing' : 'Railway Crossing',
      coordinates: `${14.1565 + i * 0.4}, ${101.5016 + i * 0.3}`,
      cameras: [
        {
          id: i * 2 + 21,
          name: `East Camera ${String.fromCharCode(75 + i)}`,
          streamUrl: `rtsp://camera${i + 11}.stream.com/east`,
          aiUrl: `http://ai-service.com/analyze/east-${i + 11}`,
          status: 'active',
          type: 'PTZ',
          location: 'East View',
          installationDate: '2024-02-15',
          latitude: 14.1565 + i * 0.4,
          longitude: 101.5016 + i * 0.3 + 0.0001,
        },
        {
          id: i * 2 + 22,
          name: `West Camera ${String.fromCharCode(75 + i)}`,
          streamUrl: `rtsp://camera${i + 11}.stream.com/west`,
          aiUrl: `http://ai-service.com/analyze/west-${i + 11}`,
          status: i % 5 === 0 ? 'offline' : 'active',
          type: 'Fixed',
          location: 'West View',
          installationDate: '2024-02-15',
          latitude: 14.1565 + i * 0.4,
          longitude: 101.5016 + i * 0.3 - 0.0001,
        },
      ],
    })),
  },
  // Generate 8 more routes with similar pattern
  ...Array.from({ length: 8 }, (_, routeIndex) => ({
    id: routeIndex + 4,
    name: [
      'Eastern Line',
      'Southern Line',
      'Western Line',
      'Coastal Line',
      'Central Line',
      'Mountain Line',
      'Border Line',
      'Urban Line',
    ][routeIndex],
    description: `Route ${routeIndex + 4} description`,
    status: 'active',
    startPoint: `${
      [
        'Hua Mak Crossing',
        'Thonburi Crossing',
        'Bang Sue Crossing',
        'Samut Prakan Crossing',
        'Pathum Thani Crossing',
        'Ratchaburi Crossing',
        'Mae Sot Crossing',
        'Min Buri Crossing',
      ][routeIndex]
    }`,
    endPoint: `${
      [
        'Chachoengsao Terminal Crossing',
        'Hat Yai Terminal Crossing',
        'Kanchanaburi Terminal Crossing',
        'Rayong Terminal Crossing',
        'Sing Buri Terminal Crossing',
        'Phetchaburi Terminal Crossing',
        'Tak Terminal Crossing',
        'Chachoengsao Terminal Crossing',
      ][routeIndex]
    }`,
    crossings: Array.from({ length: 10 }, (_, i) => ({
      id: (routeIndex + 4) * 10 + i,
      name: `${
        [
          'Hua Mak',
          'Thonburi',
          'Bang Sue',
          'Samut Prakan',
          'Pathum Thani',
          'Ratchaburi',
          'Mae Sot',
          'Min Buri',
        ][routeIndex]
      } Crossing ${String.fromCharCode(65 + i)}`,
      type: i % 2 === 0 ? 'Level Crossing' : 'Railway Crossing',
      coordinates: `${13.5565 + (routeIndex + i) * 0.3}, ${100.3016 + (routeIndex + i) * 0.25}`,
      cameras: [
        {
          id: (routeIndex + 4) * 20 + i * 2 + 1,
          name: `Primary Camera ${String.fromCharCode(85 + routeIndex * 10 + i)}`,
          streamUrl: `rtsp://camera${(routeIndex + 4) * 10 + i + 1}.stream.com/primary`,
          aiUrl: `http://ai-service.com/analyze/primary-${(routeIndex + 4) * 10 + i + 1}`,
          status: i % 7 === 0 ? 'offline' : 'active',
          type: i % 2 === 0 ? 'PTZ' : 'Fixed',
          location: 'Primary View',
          installationDate: '2024-03-01',
          latitude: 13.5565 + (routeIndex + i) * 0.3 + 0.0001,
          longitude: 100.3016 + (routeIndex + i) * 0.25,
        },
        {
          id: (routeIndex + 4) * 20 + i * 2 + 2,
          name: `Secondary Camera ${String.fromCharCode(85 + routeIndex * 10 + i)}`,
          streamUrl: `rtsp://camera${(routeIndex + 4) * 10 + i + 1}.stream.com/secondary`,
          aiUrl: `http://ai-service.com/analyze/secondary-${(routeIndex + 4) * 10 + i + 1}`,
          status: 'active',
          type: i % 2 === 0 ? 'Fixed' : 'PTZ',
          location: 'Secondary View',
          installationDate: '2024-03-01',
          latitude: 13.5565 + (routeIndex + i) * 0.3 - 0.0001,
          longitude: 100.3016 + (routeIndex + i) * 0.25,
        },
      ],
    })),
  })),
])
